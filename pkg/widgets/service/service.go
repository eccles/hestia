// Code generated by ../../../scripts/grpcserver.sh widgets. DO NOT EDIT.
package widgetsService

import (
	"fmt"

	widgetsAPI "github.com/eccles/hestia/pkg/apis/widgets"
)

type loggerContextKey string

// implments the widgetsAPI.WidgetsServer interfacw
type Service struct {
	widgetsAPI.UnimplementedWidgetsServer

	// Version of application
	Version string

	// An interface as we may want to mock it out in tests.
	Logger LoggerInterface

	// A concrete implementation of a GRPC service.
	GRPC GRPCService
}

func (s *Service) Run() error {

	var err error

	err = s.Logger.Open()
	if err != nil {
		return fmt.Errorf("logger start failure: %w", err)
	}
	defer s.Logger.Close()

	err = s.StartGRPCService()
	if err != nil {
		return fmt.Errorf("grpcservice start failure: %w", err)
	}
	defer s.GRPC.Stop()

	return s.Connect()
}
